{"paragraphs":[{"text":"%md\n<h1>Dependencies</h1>\n<h3>Run this before any Spark operations</h3>","dateUpdated":"2016-08-29T01:50:14+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","tableHide":false,"editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378475468_-857942096","id":"20160828-100115_1867273233","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Dependencies</h1>\n<h3>Run this before any Spark operations</h3>\n"},"dateCreated":"2016-08-28T10:01:15+0000","dateStarted":"2016-08-29T01:50:14+0000","dateFinished":"2016-08-29T01:50:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21281"},{"text":"%dep\r\nz.reset() \r\nz.load(\"com.databricks:spark-csv_2.10:1.4.0\")","dateUpdated":"2016-08-29T06:37:37+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378311991_-394132492","id":"20160827-200057_519068860","dateCreated":"2016-08-28T09:58:31+0000","dateStarted":"2016-08-29T06:37:37+0000","dateFinished":"2016-08-29T06:37:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21282","errorMessage":"","focus":true},{"text":"%md\n<h1>Imports and definitions</h1>","dateUpdated":"2016-08-29T01:50:20+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378574739_1691574327","id":"20160828-100254_2019206887","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Imports and definitions</h1>\n"},"dateCreated":"2016-08-28T10:02:54+0000","dateStarted":"2016-08-29T01:50:20+0000","dateFinished":"2016-08-29T01:50:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21283"},{"text":"%spark \nimport org.apache.spark.sql._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql.expressions.Window\nimport org.apache.spark.sql.functions._\n\ncase class Person(id: Int, name: String, age: Int)\ncase class Zodiac(year: Int, zodiac: String)\ncase class EsotericPerson(name: String, yearOfBirth: Int, zodiac: String)\n\ndef showText(df: DataFrame) = {\n  println(\"Schema:\")\n  df.printSchema\n  println(\"Data:\")\n  df.show(10)\n}","dateUpdated":"2016-08-29T06:38:18+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378311995_-395671488","id":"20160827-202054_64623292","dateCreated":"2016-08-28T09:58:31+0000","dateStarted":"2016-08-29T06:38:18+0000","dateFinished":"2016-08-29T06:38:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21284","errorMessage":"","focus":true},{"text":"%md\n<h1>DataSource API Demonstration</h1>","dateUpdated":"2016-08-29T01:50:41+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378656530_-920947326","id":"20160828-100416_1603338519","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>DataSource API Demonstration</h1>\n"},"dateCreated":"2016-08-28T10:04:16+0000","dateStarted":"2016-08-29T01:50:41+0000","dateFinished":"2016-08-29T01:50:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21285"},{"text":"%md\n<h3>Read dataset from CSV (3rd party lib)</h3>","dateUpdated":"2016-08-29T01:50:44+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378693930_281069535","id":"20160828-100453_753196631","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Read dataset from CSV (3rd party lib)</h3>\n"},"dateCreated":"2016-08-28T10:04:53+0000","dateStarted":"2016-08-29T01:50:44+0000","dateFinished":"2016-08-29T01:50:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21286"},{"text":"%spark \r\nval df = sqlContext.read\r\n  .format(\"com.databricks.spark.csv\")\r\n  .option(\"header\", \"true\")\r\n  .option(\"inferSchema\", \"true\")\r\n  .load(\"hdfs://172.72.0.100:9000/user/training2016aug/datasets/people\")\r\n  \r\nshowText(df)","dateUpdated":"2016-08-29T06:38:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378311995_-395671488","id":"20160827-200106_1563006264","dateCreated":"2016-08-28T09:58:31+0000","dateStarted":"2016-08-29T06:38:47+0000","dateFinished":"2016-08-29T06:39:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21287","errorMessage":"","focus":true},{"text":"%md\n<h3>Write dataset to JSON (builtin writer)</h3>","dateUpdated":"2016-08-29T01:50:49+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378744010_1423617237","id":"20160828-100544_1397064607","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Write dataset to JSON (builtin writer)</h3>\n"},"dateCreated":"2016-08-28T10:05:44+0000","dateStarted":"2016-08-29T01:50:49+0000","dateFinished":"2016-08-29T01:50:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21288"},{"text":"%spark \r\ndf.write\r\n  .mode(SaveMode.Overwrite)\r\n  .json(\"hdfs://172.72.0.100:9000/user/training2016aug/datasets/people.json\")","dateUpdated":"2016-08-29T06:52:29+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378311998_-396825734","id":"20160827-202011_933362888","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2016-08-28T09:58:31+0000","dateStarted":"2016-08-29T06:52:29+0000","dateFinished":"2016-08-29T06:52:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21289"},{"text":"%md\n<h1>Creating DataFrames</h1>","dateUpdated":"2016-08-29T01:50:53+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472430537144_-1075294200","id":"20160829-002857_1983941851","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Creating DataFrames</h1>\n"},"dateCreated":"2016-08-29T00:28:57+0000","dateStarted":"2016-08-29T01:50:53+0000","dateFinished":"2016-08-29T01:50:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21290"},{"text":"%md\n<h3>Automatic schema inference: Read previously saved JSON dataset</h3>","dateUpdated":"2016-08-29T01:50:57+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378790514_-2060791395","id":"20160828-100630_814988941","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Automatic schema inference: Read previously saved JSON dataset</h3>\n"},"dateCreated":"2016-08-28T10:06:30+0000","dateStarted":"2016-08-29T01:50:57+0000","dateFinished":"2016-08-29T01:50:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21291"},{"text":"%spark \r\nshowText(\r\n  sqlContext.read\r\n    .json(\"hdfs://172.72.0.100:9000/user/training2016aug/datasets/people.json\")\r\n)","dateUpdated":"2016-08-29T03:54:41+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378311998_-396825734","id":"20160827-202147_359887458","dateCreated":"2016-08-28T09:58:31+0000","dateStarted":"2016-08-29T03:54:41+0000","dateFinished":"2016-08-29T03:54:43+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21292"},{"text":"%md\n<h3>Manual schema inference: Convert RDD to DataFrame</h3>","dateUpdated":"2016-08-29T01:59:20+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378848986_200670694","id":"20160828-100728_1916399056","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Manual schema inference: Convert RDD to DataFrame</h3>\n"},"dateCreated":"2016-08-28T10:07:28+0000","dateStarted":"2016-08-29T01:59:20+0000","dateFinished":"2016-08-29T01:59:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21293"},{"text":"%spark \r\nval rdd = sc.textFile(\"hdfs://172.72.0.100:9000/user/training2016aug/datasets/people\")\r\n  .filter(!_.equalsIgnoreCase(\"id,name,age\"))\r\n  .map(_.split(\",\"))","dateUpdated":"2016-08-29T03:56:02+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378311999_-397210483","id":"20160827-202331_1226125821","dateCreated":"2016-08-28T09:58:31+0000","dateStarted":"2016-08-29T03:56:02+0000","dateFinished":"2016-08-29T03:56:04+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21294"},{"text":"%md\n<h4>Reflection based schema inference</h4>","dateUpdated":"2016-08-29T01:59:24+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378869657_-110191093","id":"20160828-100749_2084924915","result":{"code":"SUCCESS","type":"HTML","msg":"<h4>Reflection based schema inference</h4>\n"},"dateCreated":"2016-08-28T10:07:49+0000","dateStarted":"2016-08-29T01:59:24+0000","dateFinished":"2016-08-29T01:59:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21295"},{"text":"%spark \r\nshowText(\r\n  rdd.map(p => Person(p(0).toInt, p(1), p(2).toInt))\r\n    .toDF\r\n)    ","dateUpdated":"2016-08-29T03:56:54+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":false,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378311999_-397210483","id":"20160827-202408_1242741745","dateCreated":"2016-08-28T09:58:31+0000","dateStarted":"2016-08-29T03:56:54+0000","dateFinished":"2016-08-29T03:56:57+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21296"},{"text":"%md\n<h4>Programmatic schema inference</h3>","dateUpdated":"2016-08-29T01:59:30+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378894817_363080703","id":"20160828-100814_2142545469","result":{"code":"SUCCESS","type":"HTML","msg":"<p><h4>Programmatic schema inference</h3></p>\n"},"dateCreated":"2016-08-28T10:08:14+0000","dateStarted":"2016-08-29T01:59:31+0000","dateFinished":"2016-08-29T01:59:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21297"},{"text":"%spark  \r\nval schema = StructType(Array(StructField(\"id\", IntegerType), StructField(\"name\", StringType), StructField(\"age\", IntegerType)))\r\nval programmaticDF = sqlContext.createDataFrame(rdd.map(p => Row(p(0).toInt, p(1), p(2).toInt)), schema)\r\n\r\nshowText(programmaticDF) ","dateUpdated":"2016-08-29T03:58:08+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378312001_-411830941","id":"20160827-200745_1744889948","dateCreated":"2016-08-28T09:58:32+0000","dateStarted":"2016-08-29T03:58:08+0000","dateFinished":"2016-08-29T03:58:10+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21298"},{"text":"%md\n<h1>DataFrame API Demonstration</h1>","dateUpdated":"2016-08-29T01:59:34+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378919930_-1805132591","id":"20160828-100839_2065405776","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>DataFrame API Demonstration</h1>\n"},"dateCreated":"2016-08-28T10:08:39+0000","dateStarted":"2016-08-29T01:59:34+0000","dateFinished":"2016-08-29T01:59:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21299"},{"text":"%md\n<h3>Projection: using field name</h3>","dateUpdated":"2016-08-29T01:59:40+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472411177608_-1665625042","id":"20160828-190617_246886020","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Projection: using field name</h3>\n"},"dateCreated":"2016-08-28T19:06:17+0000","dateStarted":"2016-08-29T01:59:40+0000","dateFinished":"2016-08-29T01:59:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21300"},{"text":"%spark\nshowText(\n  df.select(\"name\")\n)\n ","dateUpdated":"2016-08-29T04:06:36+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378312002_-410676695","id":"20160827-203030_1117825702","dateCreated":"2016-08-28T09:58:32+0000","dateStarted":"2016-08-29T04:06:36+0000","dateFinished":"2016-08-29T04:06:37+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21301"},{"text":"%md\n<h3>Projection: using Columns (three examples - all of them equivalent)</h3>","dateUpdated":"2016-08-29T01:59:51+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472411227655_-508841630","id":"20160828-190707_1441709706","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Projection: using Columns (three examples - all of them equivalent)</h3>\n"},"dateCreated":"2016-08-28T19:07:07+0000","dateStarted":"2016-08-29T01:59:51+0000","dateFinished":"2016-08-29T01:59:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21302"},{"text":"%spark\nshowText(\n  df.select(df.col(\"age\"), df(\"id\"), $\"name\")\n)","dateUpdated":"2016-08-29T04:08:25+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472378990004_2051667528","id":"20160828-100950_1856534859","dateCreated":"2016-08-28T10:09:50+0000","dateStarted":"2016-08-29T04:07:29+0000","dateFinished":"2016-08-29T04:07:30+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21303"},{"text":"%md\n<h3>Projection: usage of DataFrame API functions</h3>\n<h4>Some of the functions accept String, some of them accept Column for field parameter</h4>","dateUpdated":"2016-08-29T01:59:59+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472411445125_-173185703","id":"20160828-191045_667314984","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Projection: usage of DataFrame API functions</h3>\n<h4>Some of the functions accept String, some of them accept Column for field parameter</h4>\n"},"dateCreated":"2016-08-28T19:10:45+0000","dateStarted":"2016-08-29T01:59:59+0000","dateFinished":"2016-08-29T01:59:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21304"},{"text":"%spark\r\nshowText(\r\n  df.select(lpad($\"id\", 8, \"0\").as(\"paddedId\"), upper($\"name\").as(\"upperName\"), abs($\"age\" - 2016).as(\"birthYear\"))\r\n)","dateUpdated":"2016-08-29T04:11:36+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472379200204_1962160596","id":"20160828-101320_546697450","dateCreated":"2016-08-28T10:13:20+0000","dateStarted":"2016-08-29T04:11:36+0000","dateFinished":"2016-08-29T04:11:37+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21305"},{"text":"%md\n<h3>Projection: Adding a new column</h3>","dateUpdated":"2016-08-29T02:00:06+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472411703997_-1318433749","id":"20160828-191503_1324185213","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Projection: Adding a new column</h3>\n"},"dateCreated":"2016-08-28T19:15:03+0000","dateStarted":"2016-08-29T02:00:06+0000","dateFinished":"2016-08-29T02:00:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21306"},{"text":"%spark\nshowText(\n  df.withColumn(\"firstName\", split($\"name\", \"\\\\s\")(0))\n)    ","dateUpdated":"2016-08-29T04:14:34+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472379256428_1173638245","id":"20160828-101416_628756530","dateCreated":"2016-08-28T10:14:16+0000","dateStarted":"2016-08-29T04:14:34+0000","dateFinished":"2016-08-29T04:14:35+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21307"},{"text":"%md\n<h3>Projection: Removing a column</h3>","dateUpdated":"2016-08-29T02:00:12+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472411767996_1581292828","id":"20160828-191607_498162906","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Projection: Removing a column</h3>\n"},"dateCreated":"2016-08-28T19:16:07+0000","dateStarted":"2016-08-29T02:00:12+0000","dateFinished":"2016-08-29T02:00:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21308"},{"text":"%spark\nshowText(\n  df.drop($\"id\")\n)","dateUpdated":"2016-08-29T04:14:53+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472379291009_-493601332","id":"20160828-101451_1361184599","dateCreated":"2016-08-28T10:14:51+0000","dateStarted":"2016-08-29T04:14:53+0000","dateFinished":"2016-08-29T04:14:54+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21309"},{"text":"%md\n<h3>Filtering: filter and where </h3>\n<h4>Convenience methods to satisfy all kinds of users</h4>","dateUpdated":"2016-08-29T02:00:15+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472412044492_985699886","id":"20160828-192044_1175294871","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Filtering: filter and where </h3>\n<h4>Convenience methods to satisfy all kinds of users</h4>\n"},"dateCreated":"2016-08-28T19:20:44+0000","dateStarted":"2016-08-29T02:00:15+0000","dateFinished":"2016-08-29T02:00:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21310"},{"text":"%spark\nshowText(\n  df.filter($\"age\".between(14, 18))\n)","dateUpdated":"2016-08-29T04:15:55+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472379305288_-1358132111","id":"20160828-101505_1198444839","dateCreated":"2016-08-28T10:15:05+0000","dateStarted":"2016-08-29T04:15:55+0000","dateFinished":"2016-08-29T04:15:56+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21311"},{"text":"%spark\nshowText(\n  df.where($\"age\".between(14, 18))\n)","dateUpdated":"2016-08-29T04:16:11+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472379318442_497927231","id":"20160828-101518_2125192386","dateCreated":"2016-08-28T10:15:18+0000","dateStarted":"2016-08-29T04:16:11+0000","dateFinished":"2016-08-29T04:16:11+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21312"},{"text":"%md\n<h3>Aggregation: groupby and column functions</h3>","dateUpdated":"2016-08-29T02:00:26+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472412334427_-1037880114","id":"20160828-192534_322092935","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Aggregation: groupby and column functions</h3>\n"},"dateCreated":"2016-08-28T19:25:34+0000","dateStarted":"2016-08-29T02:00:26+0000","dateFinished":"2016-08-29T02:00:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21313"},{"text":"%spark\n// Determining minimum, maximum ages and count for firstNames\nshowText(\n  df.withColumn(\"firstName\", split($\"name\", \"\\\\s\")(0))\n    .groupBy($\"firstName\")\n    .agg(min($\"age\"), max($\"age\"), count($\"age\"))\n) ","dateUpdated":"2016-08-29T06:26:48+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"firstName","index":0,"aggr":"sum"}],"values":[{"name":"max(age)","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"firstName","index":0,"aggr":"sum"},"yAxis":{"name":"max(age)","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472379356717_-1410165158","id":"20160828-101556_2095626963","dateCreated":"2016-08-28T10:15:56+0000","dateStarted":"2016-08-29T04:18:11+0000","dateFinished":"2016-08-29T04:18:13+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21314"},{"text":"%md\n<h3>Aggregation: with predefined function</h3>","dateUpdated":"2016-08-29T02:00:31+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472412449802_497252673","id":"20160828-192729_765334200","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Aggregation: with predefined function</h3>\n"},"dateCreated":"2016-08-28T19:27:29+0000","dateStarted":"2016-08-29T02:00:32+0000","dateFinished":"2016-08-29T02:00:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21315"},{"text":"%spark\n// Querying maximum ages for each firstname\nshowText(\n  df.withColumn(\"firstName\", split($\"name\", \"\\\\s\")(0))\n    .groupBy($\"firstName\")\n    .max(\"age\")\n)","dateUpdated":"2016-08-29T06:26:48+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472379374105_2077999019","id":"20160828-101614_1441944056","dateCreated":"2016-08-28T10:16:14+0000","dateStarted":"2016-08-29T04:23:26+0000","dateFinished":"2016-08-29T04:23:27+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21316"},{"text":"%md\n<h3>Aggregation: window functions</h3>","dateUpdated":"2016-08-29T02:00:35+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472412774290_1122933174","id":"20160828-193254_1270359852","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Aggregation: window functions</h3>\n"},"dateCreated":"2016-08-28T19:32:54+0000","dateStarted":"2016-08-29T02:00:35+0000","dateFinished":"2016-08-29T02:00:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21317"},{"text":"%spark\n// Selecting the TOP 2 persons for each ageGroups with Kate firstName\nshowText(\n  df.withColumn(\"AgeGroup\",\n    when($\"age\" < 16, \"Children\")\n      .when($\"age\" < 25, \"Youth\")\n      .when($\"age\" < 65, \"Adult\")\n      .otherwise(\"Seniors\")\n  )\n  .where($\"name\" like \"Kate %\")\n  .select($\"name\", $\"AgeGroup\", $\"age\", rank.over(Window.partitionBy($\"AgeGroup\").orderBy($\"age\")).as(\"rank\"))\n  .where($\"rank\" < 2)\n)","dateUpdated":"2016-08-29T06:27:45+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472379656699_-121627411","id":"20160828-102056_1578642831","dateCreated":"2016-08-28T10:20:56+0000","dateStarted":"2016-08-29T04:23:35+0000","dateFinished":"2016-08-29T04:23:38+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21318"},{"text":"%md\n<h3>Explode: (like Hive UDTF)</h3>","dateUpdated":"2016-08-29T02:00:46+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472412889291_-882641893","id":"20160828-193449_147505901","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Explode: (like Hive UDTF)</h3>\n"},"dateCreated":"2016-08-28T19:34:49+0000","dateStarted":"2016-08-29T02:00:46+0000","dateFinished":"2016-08-29T02:00:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21319"},{"text":"%spark\nval withAgeInDays = df.withColumn(\"ageInDays\", $\"age\" * 365).withColumnRenamed(\"age\", \"ageInYears\")\nwithAgeInDays.show(10)","dateUpdated":"2016-08-29T06:42:47+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472452889814_1028213183","id":"20160829-064129_1539449146","dateCreated":"2016-08-29T06:41:29+0000","dateStarted":"2016-08-29T06:42:17+0000","dateFinished":"2016-08-29T06:42:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21320","errorMessage":"","focus":true},{"text":"%spark\n// Transposing ageInYears and ageInDays colums, so one record will be exploded into two separate records\nshowText(\n  withAgeInDays.explode($\"ageInYears\", $\"ageInDays\")(row => Array((\"ageInYears\", row.getInt(0)), (\"ageInDays\", row.getInt(1))))\n    .select($\"name\", $\"_1\".as(\"ageCategory\"), $\"_2\".as(\"ageValue\"))\n)","dateUpdated":"2016-08-29T06:46:34+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472379683313_979401347","id":"20160828-102123_2064974098","dateCreated":"2016-08-28T10:21:23+0000","dateStarted":"2016-08-29T06:42:44+0000","dateFinished":"2016-08-29T06:42:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21321","errorMessage":"","focus":true},{"text":"%md\n<h3>Distinct and OrderBy</h3>","dateUpdated":"2016-08-29T02:00:51+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472413160737_-2145020003","id":"20160828-193920_499444457","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Distinct and OrderBy</h3>\n"},"dateCreated":"2016-08-28T19:39:20+0000","dateStarted":"2016-08-29T02:00:52+0000","dateFinished":"2016-08-29T02:00:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21322"},{"text":"%spark\n// Queries the available age values in the data set and emits the result sorted\nshowText(\n  df.select($\"age\")\n    .distinct\n    .orderBy($\"age\")\n)","dateUpdated":"2016-08-29T06:46:34+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472403518139_-494192618","id":"20160828-165838_1110195711","dateCreated":"2016-08-28T16:58:38+0000","dateStarted":"2016-08-29T04:29:57+0000","dateFinished":"2016-08-29T04:29:59+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21323"},{"text":"%md\n<h3>Join: inner join with an other DataFrame</h3>","dateUpdated":"2016-08-29T02:01:00+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472413234007_-1366749599","id":"20160828-194034_1734350248","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Join: inner join with an other DataFrame</h3>\n"},"dateCreated":"2016-08-28T19:40:34+0000","dateStarted":"2016-08-29T02:01:01+0000","dateFinished":"2016-08-29T02:01:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21324"},{"text":"%spark\nval withYearOfBirth = df.withColumn(\"yearOfBirth\", abs($\"age\" - 2016))\n\nval zodiacs = sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\")\n    .option(\"inferSchema\", \"true\")\n    .load(\"hdfs://172.72.0.100:9000/user/training2016aug/datasets/zodiac\")\n    \n// Joins the Zodiac \nshowText(\n  withYearOfBirth.join(zodiacs, $\"yearOfBirth\" === $\"year\")\n    .select($\"name\", $\"yearOfBirth\", $\"zodiac\")\n)","dateUpdated":"2016-08-29T06:49:48+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472403562863_-402344900","id":"20160828-165922_1878127049","dateCreated":"2016-08-28T16:59:22+0000","dateStarted":"2016-08-29T06:49:48+0000","dateFinished":"2016-08-29T06:49:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21325","errorMessage":"","focus":true},{"text":"%md\n<h3>RDD: accessing RDD under DataFrame</h3>\n<h4>WARNING: you will lose optimisation</h4>","dateUpdated":"2016-08-29T02:01:06+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472413314403_-1602895123","id":"20160828-194154_910627566","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>RDD: accessing RDD under DataFrame</h3>\n<h4>WARNING: you will lose optimisation</h4>\n"},"dateCreated":"2016-08-28T19:41:54+0000","dateStarted":"2016-08-29T02:01:06+0000","dateFinished":"2016-08-29T02:01:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21326"},{"text":"%spark\ndf.rdd.map(_.getString(1)).take(10)\n  .foreach(println)\n","dateUpdated":"2016-08-29T04:33:20+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472403650749_-477112069","id":"20160828-170050_1886688215","dateCreated":"2016-08-28T17:00:50+0000","dateStarted":"2016-08-29T04:33:20+0000","dateFinished":"2016-08-29T04:33:21+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21327"},{"text":"%md\n<h1>SQL</h1>","dateUpdated":"2016-08-29T02:01:10+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472431016525_2292236","id":"20160829-003656_1077865768","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>SQL</h1>\n"},"dateCreated":"2016-08-29T00:36:56+0000","dateStarted":"2016-08-29T02:01:10+0000","dateFinished":"2016-08-29T02:01:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21328"},{"text":"%md\n<h3>SQL: registering DataFrame as table and querying it with SQL</h3>","dateUpdated":"2016-08-29T02:01:13+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472413974623_1814054401","id":"20160828-195254_1853715689","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>SQL: registering DataFrame as table and querying it with SQL</h3>\n"},"dateCreated":"2016-08-28T19:52:54+0000","dateStarted":"2016-08-29T02:01:13+0000","dateFinished":"2016-08-29T02:01:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21329"},{"text":"%spark\n// Register DataFrame as internal table and queries it\n// Same min, max, count aggregation as before to show the differences and similarities\ndf.registerTempTable(\"persons\")\nshowText(\n sqlContext.sql(\"SELECT split(name,' ')[0] as firstname, min(age), max(age), count(age)\" +\n  \" FROM persons\" +\n  \" WHERE name LIKE 'Luc%'\" +\n  \" GROUP BY split(name,' ')[0]\" +\n  \" ORDER BY min(age) DESC\")\n)\nsqlContext.dropTempTable(\"persons\")","dateUpdated":"2016-08-29T06:51:58+0000","config":{"colWidth":12,"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"firstname","index":0,"aggr":"sum"}],"values":[{"name":"min(age)","index":1,"aggr":"sum"},{"name":"max(age)","index":2,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"firstname","index":0,"aggr":"sum"},"yAxis":{"name":"min(age)","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472403609387_1063761303","id":"20160828-170009_520400691","dateCreated":"2016-08-28T17:00:09+0000","dateStarted":"2016-08-29T04:34:50+0000","dateFinished":"2016-08-29T04:34:52+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21330"},{"text":"%md\n<h3>SQL: read data directly from persistent storage</h3>","dateUpdated":"2016-08-29T02:01:18+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472414026612_-347202764","id":"20160828-195346_2087545899","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>SQL: read data directly from persistent storage</h3>\n"},"dateCreated":"2016-08-28T19:53:46+0000","dateStarted":"2016-08-29T02:01:18+0000","dateFinished":"2016-08-29T02:01:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21331"},{"text":"%spark\nshowText(\n  sqlContext.sql(\"SELECT * FROM json.`hdfs://172.72.0.100:9000/user/training2016aug/datasets/people.json`\")\n)\n","dateUpdated":"2016-08-29T06:52:59+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472403684722_-1673049568","id":"20160828-170124_1399225759","dateCreated":"2016-08-28T17:01:24+0000","dateStarted":"2016-08-29T06:52:59+0000","dateFinished":"2016-08-29T06:53:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21332","errorMessage":"","focus":true},{"text":"%md\n<h1>UDF</h1>\n<h3>Usage of UDFs with SQL and DataFrame API</h3>\n<h4>Definition of UDF as a plain lambda function</h4>","dateUpdated":"2016-08-29T02:01:29+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472414076509_1732826411","id":"20160828-195436_363465645","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>UDF</h1>\n<h3>Usage of UDFs with SQL and DataFrame API</h3>\n<h4>Definition of UDF as a plain lambda function</h4>\n"},"dateCreated":"2016-08-28T19:54:36+0000","dateStarted":"2016-08-29T02:01:29+0000","dateFinished":"2016-08-29T02:01:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21333"},{"text":"%spark\n// Lamdba for categorizing persons into age groups\ndef getAgeGroup = (age: Int) => age match {\n  case age if age < 16 => \"Children\"\n  case age if age < 25 => \"Youth\"\n  case age if age < 65 => \"Adult\"\n  case _ => \"Seniors\"\n}","dateUpdated":"2016-08-29T06:54:10+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472403852678_1435229526","id":"20160828-170412_1322165507","dateCreated":"2016-08-28T17:04:12+0000","dateStarted":"2016-08-29T04:36:47+0000","dateFinished":"2016-08-29T04:36:47+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21334"},{"text":"%md\n<h4>UDF: usage with DataFrame API</h4>","dateUpdated":"2016-08-29T02:02:17+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472414244276_1871349694","id":"20160828-195724_125458855","result":{"code":"SUCCESS","type":"HTML","msg":"<h4>UDF: usage with DataFrame API</h4>\n"},"dateCreated":"2016-08-28T19:57:24+0000","dateStarted":"2016-08-29T02:02:17+0000","dateFinished":"2016-08-29T02:02:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21335"},{"text":"%spark\n// DataFrame DSL UDF\ndef getAgeGroupUDF = udf(getAgeGroup)\n\n// Determines the number of people in each age group\nz.show(\n df.groupBy(getAgeGroupUDF($\"age\").as(\"ageGroup\"))\n  .count\n)","dateUpdated":"2016-08-29T06:55:40+0000","config":{"colWidth":12,"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"ageGroup","index":0,"aggr":"sum"}],"values":[{"name":"count","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"ageGroup","index":0,"aggr":"sum"},"yAxis":{"name":"count","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472403877334_-414460940","id":"20160828-170437_1492760406","dateCreated":"2016-08-28T17:04:37+0000","dateStarted":"2016-08-29T04:37:58+0000","dateFinished":"2016-08-29T04:38:00+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21336"},{"text":"%md\n<h4>UDF: usage with SQL</h4>","dateUpdated":"2016-08-29T02:02:21+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472414280147_2099567089","id":"20160828-195800_750585391","result":{"code":"SUCCESS","type":"HTML","msg":"<h4>UDF: usage with SQL</h4>\n"},"dateCreated":"2016-08-28T19:58:00+0000","dateStarted":"2016-08-29T02:02:21+0000","dateFinished":"2016-08-29T02:02:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21337"},{"text":"%spark\n// SQL UDF\nsqlContext.udf.register(\"getAgeGroup\", getAgeGroup)\ndf.registerTempTable(\"persons\")\n\n// Determines the number of people in each age group\nz.show(\n  sqlContext.sql(\"SELECT getAgeGroup(age) as ageGroup, count(*) as count\" +\n    \" FROM persons\" +\n    \" GROUP BY getAgeGroup(age)\")\n)\nsqlContext.dropTempTable(\"persons\")\n","dateUpdated":"2016-08-29T06:55:40+0000","config":{"colWidth":12,"graph":{"mode":"pieChart","height":300,"optionOpen":false,"keys":[{"name":"ageGroup","index":0,"aggr":"sum"}],"values":[{"name":"count","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"ageGroup","index":0,"aggr":"sum"},"yAxis":{"name":"count","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472403891819_718655219","id":"20160828-170451_985263086","dateCreated":"2016-08-28T17:04:51+0000","dateStarted":"2016-08-29T04:37:52+0000","dateFinished":"2016-08-29T04:37:56+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21338"},{"text":"%md\n<h1>HIVE Interoperability</h1>","dateUpdated":"2016-08-29T02:02:26+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472404109698_188210724","id":"20160828-170829_2010557139","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>HIVE Interoperability</h1>\n"},"dateCreated":"2016-08-28T17:08:29+0000","dateStarted":"2016-08-29T02:02:26+0000","dateFinished":"2016-08-29T02:02:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21339"},{"text":"%md\n<h3>HIVE: save DataFrame as managed Hive table</h3>","dateUpdated":"2016-08-29T02:02:28+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472414350283_-1380593982","id":"20160828-195910_360666099","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>HIVE: save DataFrame as managed Hive table</h3>\n"},"dateCreated":"2016-08-28T19:59:10+0000","dateStarted":"2016-08-29T02:02:28+0000","dateFinished":"2016-08-29T02:02:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21340"},{"text":"%spark\ndf.write\n  .mode(SaveMode.Overwrite)\n  .saveAsTable(\"people\")\n","dateUpdated":"2016-08-29T04:40:26+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472403955201_1423792684","id":"20160828-170555_2008058339","dateCreated":"2016-08-28T17:05:55+0000","dateStarted":"2016-08-29T04:40:26+0000","dateFinished":"2016-08-29T04:40:29+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21341"},{"text":"%md\n<h3>HIVE: creating and empty Hive managed table</h3>","dateUpdated":"2016-08-29T02:02:32+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472414393019_2068538701","id":"20160828-195953_78212791","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>HIVE: creating and empty Hive managed table</h3>\n"},"dateCreated":"2016-08-28T19:59:53+0000","dateStarted":"2016-08-29T02:02:32+0000","dateFinished":"2016-08-29T02:02:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21342"},{"text":"%spark\n// Utuóilizng HIVE DDL\nsqlContext.sql(\"CREATE TABLE IF NOT EXISTS seniors (id INT, name STRING, age INT)\")\nsqlContext.sql(\"SHOW tables\").show","dateUpdated":"2016-08-29T06:56:27+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":false,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472403979100_1027916714","id":"20160828-170619_1566396644","dateCreated":"2016-08-28T17:06:19+0000","dateStarted":"2016-08-29T04:41:00+0000","dateFinished":"2016-08-29T04:41:01+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21343"},{"text":"%md\n<h3>Hive: populationg Seniors from People</h3>","dateUpdated":"2016-08-29T02:02:37+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472414593603_1915132804","id":"20160828-200313_987959391","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Hive: populationg Seniors from People</h3>\n"},"dateCreated":"2016-08-28T20:03:13+0000","dateStarted":"2016-08-29T02:02:37+0000","dateFinished":"2016-08-29T02:02:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21344"},{"text":"%spark\n// Utilizing HIVE DML\nsqlContext.sql(\"INSERT OVERWRITE TABLE seniors\" +\n  \" SELECT * FROM people\" +\n  \" WHERE age > 65\")\nsqlContext.sql(\"SELECT * FROM seniors\").show","dateUpdated":"2016-08-29T06:56:27+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":false,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472404015995_-247648483","id":"20160828-170655_1522439506","dateCreated":"2016-08-28T17:06:55+0000","dateStarted":"2016-08-29T04:41:40+0000","dateFinished":"2016-08-29T04:41:43+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21345"},{"text":"%md\n<h3>HIVE: removing unused tables</h3>","dateUpdated":"2016-08-29T02:02:45+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472414639970_-2088163654","id":"20160828-200359_1861305989","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>HIVE: removing unused tables</h3>\n"},"dateCreated":"2016-08-28T20:03:59+0000","dateStarted":"2016-08-29T02:02:45+0000","dateFinished":"2016-08-29T02:02:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21346"},{"text":"%spark\nsqlContext.sql(\"DROP TABLE people\")\nsqlContext.sql(\"DROP TABLE seniors\")\nsqlContext.sql(\"SHOW tables\")\n  .show","dateUpdated":"2016-08-29T04:42:00+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472404043571_-691618065","id":"20160828-170723_536012107","dateCreated":"2016-08-28T17:07:23+0000","dateStarted":"2016-08-29T04:42:00+0000","dateFinished":"2016-08-29T04:42:02+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21347"},{"text":"%md\n<h1>Parquet</h1>","dateUpdated":"2016-08-29T02:02:56+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472404142145_-96502938","id":"20160828-170902_1591448643","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Parquet</h1>\n"},"dateCreated":"2016-08-28T17:09:02+0000","dateStarted":"2016-08-29T02:02:56+0000","dateFinished":"2016-08-29T02:02:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21348"},{"text":"%md\n<h3>Parquet: saving DataFrame in Parquet format</h3>","dateUpdated":"2016-08-29T02:02:58+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472414727498_-2081699544","id":"20160828-200527_1048621942","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Parquet: saving DataFrame in Parquet format</h3>\n"},"dateCreated":"2016-08-28T20:05:27+0000","dateStarted":"2016-08-29T02:02:59+0000","dateFinished":"2016-08-29T02:02:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21349"},{"text":"%spark\r\ndf.withColumn(\"yearOfBirth\", abs($\"age\" - 2016))\r\n  .write\r\n  .partitionBy(\"yearOfBirth\")\r\n  .mode(SaveMode.Overwrite)\r\n  .parquet(\"hdfs://172.72.0.100:9000/user/training2016aug/datasets/people.parquet\")","dateUpdated":"2016-08-29T06:58:06+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":false,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472404078691_-1495096362","id":"20160828-170758_1369342523","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2016-08-28T17:07:58+0000","dateStarted":"2016-08-29T06:58:06+0000","dateFinished":"2016-08-29T06:58:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21350"},{"text":"%md\n<h3>Parquet: reading from Parquet</h3>","dateUpdated":"2016-08-29T02:03:08+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472414763089_1251657658","id":"20160828-200603_232320993","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Parquet: reading from Parquet</h3>\n"},"dateCreated":"2016-08-28T20:06:03+0000","dateStarted":"2016-08-29T02:03:08+0000","dateFinished":"2016-08-29T02:03:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21351"},{"text":"%spark\nval parquetDF = sqlContext.read\n    .parquet(\"hdfs://172.72.0.100:9000/user/training2016aug/datasets/people.parquet\")\n    \nshowText(\n  parquetDF.where($\"yearOfBirth\" === 1965)\n    .select($\"name\")\n)\n","dateUpdated":"2016-08-29T06:58:21+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472404158849_-1932894114","id":"20160828-170918_976173310","dateCreated":"2016-08-28T17:09:18+0000","dateStarted":"2016-08-29T06:58:21+0000","dateFinished":"2016-08-29T06:58:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21352","errorMessage":"","focus":true},{"text":"%md\n<h1>Catalyst</h1>\n<h3>Query optimization</h3>","dateUpdated":"2016-08-29T02:03:18+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472404242653_-1543958949","id":"20160828-171042_1950042569","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Catalyst</h1>\n<h3>Query optimization</h3>\n"},"dateCreated":"2016-08-28T17:10:42+0000","dateStarted":"2016-08-29T02:03:18+0000","dateFinished":"2016-08-29T02:03:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21353"},{"text":"%spark\r\nparquetDF.join(zodiacs, $\"yearOfBirth\" === $\"year\")\r\n  .select($\"name\", $\"yearOfBirth\", $\"zodiac\")\r\n  .filter($\"name\" like (\"Sam%\"))\r\n  .filter(\"yearOfBirth between 18 and 35\")\r\n  .explain(true)","dateUpdated":"2016-08-29T07:01:40+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472404276478_1513517967","id":"20160828-171116_214460321","dateCreated":"2016-08-28T17:11:16+0000","dateStarted":"2016-08-29T07:01:40+0000","dateFinished":"2016-08-29T07:01:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21354","errorMessage":"","focus":true},{"text":"%md\n<h1>Datasets</h1>\n<h3>Converting DataFrames to Datasets and joining them<h3>","dateUpdated":"2016-08-29T02:03:23+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472404446210_-1119521260","id":"20160828-171406_1843225715","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Datasets</h1>\n<p><h3>Converting DataFrames to Datasets and joining them<h3></p>\n"},"dateCreated":"2016-08-28T17:14:06+0000","dateStarted":"2016-08-29T02:03:23+0000","dateFinished":"2016-08-29T02:03:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21355"},{"text":"%spark\n// Same join as was in DataFrame example\nval shortestNamesByYearOfBirth = df.as[Person]\n\nval zodiac = zodiacs.as[Zodiac]\n\nval ds = shortestNamesByYearOfBirth.filter(_.name startsWith \"Sam\")\n  .map(p => Person(p.id, p.name, 2016 - p.age))\n  .joinWith(zodiac, $\"age\" === $\"year\")\n  .map { case (l, r) => EsotericPerson(l.name, l.age, r.zodiac) }\n\nds.printSchema\nds.show(10)\nds.explain(true)","dateUpdated":"2016-08-29T07:20:39+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472404364588_1380702975","id":"20160828-171244_514966152","dateCreated":"2016-08-28T17:12:44+0000","dateStarted":"2016-08-29T07:19:02+0000","dateFinished":"2016-08-29T07:19:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:21356","errorMessage":"","focus":true},{"text":"","dateUpdated":"2016-08-28T20:21:49+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":false,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1472404499676_-73096197","id":"20160828-171459_1886461328","dateCreated":"2016-08-28T17:14:59+0000","dateStarted":"2016-08-28T20:22:45+0000","dateFinished":"2016-08-28T20:22:45+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:21357"}],"name":"SparkSQL","id":"2BX1RY5JT","angularObjects":{"2BUSQQGCH:shared_process":[],"2BTUDPH6E:shared_process":[],"2BTGMGJA1:shared_process":[],"2BWA59EPE:shared_process":[],"2BWQRD6VF:shared_process":[],"2BUSMCYNR:shared_process":[],"2BV8HCB36:shared_process":[],"2BWRMWK5M:shared_process":[],"2BX8FCP6X:shared_process":[],"2BX5PGBEP:shared_process":[],"2BWSDV5VV:shared_process":[],"2BT9W61UU:shared_process":[],"2BUJ8YY4G:shared_process":[],"2BX1V8KN9:shared_process":[],"2BVMSSCY2:shared_process":[],"2BWN48BDQ:shared_process":[],"2BU4P3AZJ:shared_process":[],"2BVN817WG:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}